// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: crypto_data.sql

package db_test

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const findJoinedCryptoDataByUserId = `-- name: FindJoinedCryptoDataByUserId :one
SELECT user_id, xmr_id, id, priv_view_key, pub_spend_key, last_major_index, last_minor_index FROM crypto_data as cd
JOIN xmr_crypto_data as xcd ON cd.xmr_id = xcd.id
WHERE user_id = $1
`

type FindJoinedCryptoDataByUserIdRow struct {
	UserID         pgtype.UUID
	XmrID          pgtype.UUID
	ID             pgtype.UUID
	PrivViewKey    string
	PubSpendKey    string
	LastMajorIndex int32
	LastMinorIndex int32
}

func (q *Queries) FindJoinedCryptoDataByUserId(ctx context.Context, userID pgtype.UUID) (FindJoinedCryptoDataByUserIdRow, error) {
	row := q.db.QueryRow(ctx, findJoinedCryptoDataByUserId, userID)
	var i FindJoinedCryptoDataByUserIdRow
	err := row.Scan(
		&i.UserID,
		&i.XmrID,
		&i.ID,
		&i.PrivViewKey,
		&i.PubSpendKey,
		&i.LastMajorIndex,
		&i.LastMinorIndex,
	)
	return i, err
}
